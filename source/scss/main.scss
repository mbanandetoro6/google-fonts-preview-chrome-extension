@import '_variables.scss';
#google-font-preview-extension {
    section,div,*{
        padding: 0;
        margin:0;
        background: transparent;
    }
    &,
    * {
        box-sizing: border-box;
    }
    font-family: $fontFamily;
    font-size: 14px;
    position: fixed;
    top: 0;
    bottom: 0;
    z-index: $z-index;
    width: $width;
    background: $bg-color;
    color: $text-color;
    box-shadow:10px 10px 12px rgba(0, 0, 0, .3);
    transition: box-shadow $duration;
    animation: gfp-slide-right $duration forwards;
    &:hover {
        box-shadow: 3px 3px 5px rgba(0, 0, 0, .3);
    }
    a {
        color: $text-color;
        text-decoration: none;
    }
    #gfp-loader {
        background-color: white;
        position: absolute;
        top: -200px;
        left: 50%;
        transform: translateX(-50%);
        width: 60px;
        height: 60px;
        z-index: $z-index + 100;
        border-radius: 50%;
        box-shadow: 0 3px 15px rgba(0, 0, 0, .6);
        #gfp-loader-inner {
            width: 30px;
            height: 30px;
            border: 3px solid $primary-color;
            border-radius: 50%;
            transform: translate(50%, 50%) scale(0);
            opacity: 1;
            animation: gfp-loader $duration*5 forwards infinite;
        }
        animation: gfp-bounce $duration*5 both infinite;
        .gfp-loading & {
            top: 10px;
        }
    }
    #gfp-section-settings {
        display: none;
        padding: $spacing;
        background: darken($primary-color, 8);
    }
    #gfp-section-main {
        position: relative;
        padding: $spacing;
        background: $primary-color;
    }
    #gfp-actions {
        margin-bottom: $spacing/2;
        a {
            display: block;
            padding: 0;
            background: white;
            line-height: 40px;
            height: 40px;
            border-radius: $radius;
            box-shadow: 1px 1px 2px rgba(0, 0, 0, .3);
            transition: $duration/2 $easeInOutSine;
            &:hover {
                box-shadow: 0px 4px 10px rgba(0, 0, 0, .4);
            }
            &:active {
                box-shadow: none;
            }
        }
        #gfp-action-settings,
        #gfp-action-reset {
            float: left;
            color: $dark-text-color;
        }
        #gfp-action-settings,
        #gfp-action-reset,
        #gfp-action-apply,
        #gfp-action-italic {
            width: 40px;
            text-align: center;
            font-size: 22px;
        }
        #gfp-action-settings {
            margin-right: 10px;
        }
        #gfp-action-reset {
            color: $accent-color;
        }
        #gfp-action-apply {
            float: right;
            color: $dark-primary-color;
        }
        #gfp-action-italic {
            float: right;
            margin-right: $spacing/2;
            opacity: 0.4;
            &.active {
                opacity: 1;
                color: $dark-primary-color;
            }
        }
        #gfp-font-weight {
            width: auto;
            float: right;
            line-height: 40px;
            height: 40px;
            padding: 0 $spacing/2;
            margin-right: $spacing/2;
        }
    }
    .gfp-clearfix {
        &::after {
            clear: both;
            content: "";
            display: table;
        }
    }
    .gfp-input {
        display: block;
        width: 100%;
        background: white;
        border-radius: $radius;
        padding: $spacing/2;
        border: none;
        box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);
        transition: box-shadow $duration $easeInOutBack;
        font-family: $fontFamily;
        &:hover,
        &:focus {
            box-shadow: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);
            outline: none;
        }
    }
    #gfp-css-selectors {
        resize: vertical;
        max-height: 200px;
        height: 80px;
    }
    #gfp-fonts-search-wrap {
        padding: $spacing;
    }
    #gfp-fonts-search-bar {
        border-radius: 20px;
        height: 40px;
        line-height: 40px;
        padding: 0 $spacing;
        text-align: center;
    }
    #gfp-font-families {
        padding: 0;
        height: 800px;
        overflow: auto;
        &::-webkit-scrollbar {
            width: 5px;
        }
        &::-webkit-scrollbar-track {
            background: $seprator-color;
        }
        &::-webkit-scrollbar-thumb {
            background: #666;
        }
        &::-webkit-scrollbar-thumb {
            background: #666;
        }
    }
    .gfp-font-family {
        overflow: hidden;
        background: white;
        height: 40px;
        line-height: 40px;
        position: relative;
        .gfp-font-family-preview {
            text-align: left;
            margin-left: 120px;
            margin-right: 40px;
            display: block;
            font-size: 1.2em;
            overflow: hidden;
            height: 40px;
        }
        .gfp-font-family-name {
            width: 110px;
            overflow: hidden;
            padding-left: $spacing/2;
            position: absolute;
            left: 0;
            top:0;
            &:hover{
                width: auto;
                background: white;
                z-index: $z-index+2;
            }
        }
        .gfp-font-family-action {
            float: right;
            display: block;
            padding: 0;
            border-left: 1px solid $seprator-color;
            width: 40px;
            text-align: center;
        }
        border-bottom: 1px solid $seprator-color;
        &:last-child {
            border-bottom: none;
        }
    }
}

@keyframes gfp-slide-right {
    from {
        transform: translateX(-100%);
        opacity: 0;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes gfp-loader {
    0% {
        transform: translate(50%, 50%) scale(0);
    }
    100% {
        transform: translate(50%, 50%) scale(1.5);
        opacity: 0;
    }
}

@keyframes gfp-bounce {
    0%,
    20%,
    50%,
    80%,
    100% {
        transform: translateX(-50%) translateY(30px);
    }
    40% {
        transform: translateX(-50%) translateY(0);
    }
    60% {
        transform: translateX(-50%) translateY(15px);
    }
}
